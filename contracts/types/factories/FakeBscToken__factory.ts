/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FakeBscToken, FakeBscTokenInterface } from "../FakeBscToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balanceOf",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceFrom",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTo",
        type: "uint256",
      },
    ],
    name: "Transfered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50620186a0600081905550600054600160008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107fb806100706000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636c197ff51461005157806370a082311461006d578063a9059cbb1461009d578063d1660f99146100b9575b600080fd5b61006b600480360381019061006691906105bf565b6100d5565b005b61008760048036038101906100829190610547565b6101fd565b6040516100949190610687565b60405180910390f35b6100b760048036038101906100b291906105bf565b610246565b005b6100d360048036038101906100ce9190610570565b6103b1565b005b80600160008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461012491906106f8565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461017a91906106a2565b925050819055507fae92ab4b6f8f401ead768d3273e6bb937a13e39827d19c6376e8fd4512a05d9a82600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516101f1929190610619565b60405180910390a15050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029591906106f8565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102eb91906106a2565b925050819055507f2bc6cfa90e9c9ca69a7a281d876ef2244b8d5201da959f82a292c994843bc09c33600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516103a59493929190610642565b60405180910390a15050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461040091906106f8565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045691906106a2565b925050819055507f2bc6cfa90e9c9ca69a7a281d876ef2244b8d5201da959f82a292c994843bc09c83600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516105109493929190610642565b60405180910390a1505050565b60008135905061052c81610797565b92915050565b600081359050610541816107ae565b92915050565b60006020828403121561055957600080fd5b60006105678482850161051d565b91505092915050565b60008060006060848603121561058557600080fd5b60006105938682870161051d565b93505060206105a48682870161051d565b92505060406105b586828701610532565b9150509250925092565b600080604083850312156105d257600080fd5b60006105e08582860161051d565b92505060206105f185828601610532565b9150509250929050565b6106048161072c565b82525050565b6106138161075e565b82525050565b600060408201905061062e60008301856105fb565b61063b602083018461060a565b9392505050565b600060808201905061065760008301876105fb565b610664602083018661060a565b61067160408301856105fb565b61067e606083018461060a565b95945050505050565b600060208201905061069c600083018461060a565b92915050565b60006106ad8261075e565b91506106b88361075e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106ed576106ec610768565b5b828201905092915050565b60006107038261075e565b915061070e8361075e565b92508282101561072157610720610768565b5b828203905092915050565b60006107378261073e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6107a08161072c565b81146107ab57600080fd5b50565b6107b78161075e565b81146107c257600080fd5b5056fea264697066735822122051d3a0c9dc450aea342a2ff1cff02392e6203f22f8bc4a98a94ac453e450f41864736f6c63430008040033";

export class FakeBscToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FakeBscToken> {
    return super.deploy(overrides || {}) as Promise<FakeBscToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FakeBscToken {
    return super.attach(address) as FakeBscToken;
  }
  connect(signer: Signer): FakeBscToken__factory {
    return super.connect(signer) as FakeBscToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeBscTokenInterface {
    return new utils.Interface(_abi) as FakeBscTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeBscToken {
    return new Contract(address, _abi, signerOrProvider) as FakeBscToken;
  }
}
